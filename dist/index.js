"use strict";var q=Object.create;var f=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,U=Object.prototype.hasOwnProperty;var i=(e,o)=>{for(var s in o)f(e,s,{get:o[s],enumerable:!0})},j=(e,o,s,t)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of F(o))!U.call(e,r)&&r!==s&&f(e,r,{get:()=>o[r],enumerable:!(t=k(o,r))||t.enumerable});return e};var u=(e,o,s)=>(s=e!=null?q(K(e)):{},j(o||!e||!e.__esModule?f(s,"default",{value:e,enumerable:!0}):s,e));var L=require("discord.js");var D=u(require("dotenv"));D.default.config();var{DISCORD_TOKEN:R,DISCORD_CLIENT_ID:I}=process.env;if(!R||!I)throw new Error("Missing environment variables");var m={DISCORD_TOKEN:R,DISCORD_CLIENT_ID:I};var h={};i(h,{data:()=>z,execute:()=>Y});var x=require("discord.js"),z=new x.SlashCommandBuilder().setName("ping").setDescription("Replies with Pong!");async function Y(e){return e.reply("Pong!")}var w={};i(w,{data:()=>W,execute:()=>X,getRepos:()=>P,getUserProfile:()=>N});var c=require("discord.js"),b=u(require("axios")),T=process.env.GITHUB_TOKEN,W=new c.SlashCommandBuilder().setName("github").setDescription("Get GitHub stats for a user").addSubcommand(e=>e.setName("profile").setDescription("Get GitHub profile for a user").addStringOption(o=>o.setName("username").setDescription("GitHub username").setRequired(!0))).addSubcommand(e=>e.setName("repos").setDescription("Get a list of repositories for a GitHub user").addStringOption(o=>o.setName("username").setDescription("GitHub username").setRequired(!0)));async function X(e){if(e.isChatInputCommand())try{let o=e.options.getString("username");if(!o)throw new Error("Username is required");if(e.options.getSubcommand()==="profile"){let s=await N(o);return await e.reply({embeds:[s]})}else if(e.options.getSubcommand()==="repos"){let s=await P(o);return await e.reply({embeds:[s]})}}catch(o){return console.log(o.message),e.reply(`Error: ${o.message}`)}}async function N(e){let o=await b.default.get(`https://api.github.com/users/${e}`,{headers:{Authorization:`token ${T}`}});return new c.EmbedBuilder().setTitle(`${e}'s GitHub Profile`).addFields({name:"Public Repositories",value:o.data.public_repos.toString(),inline:!0},{name:"Followers",value:o.data.followers.toString(),inline:!0},{name:"Following",value:o.data.following.toString(),inline:!0},{name:"Account Created At",value:`<t:${Math.floor(new Date(o.data.created_at).getTime()/1e3)}:D>`,inline:!0}).setColor("#0099ff")}async function P(e){let o=await b.default.get(`https://api.github.com/users/${e}/repos`,{headers:{Authorization:`token ${T}`}});return new c.EmbedBuilder().setTitle(`${e}'s GitHub Repositories`).setDescription(o.data.map(t=>`[${t.name}](${t.html_url})`).join(`
`)).setColor("#0099ff")}var y={};i(y,{data:()=>V,execute:()=>J});var O=require("discord.js"),V=new O.SlashCommandBuilder().setName("kirb").setDescription("Pings Kirb!");async function J(e){return e.reply("<@765061967961784321>")}var C={};i(C,{data:()=>Q,execute:()=>Z});var _=require("discord.js"),Q=new _.SlashCommandBuilder().setName("dice").setDescription("Rolls a dice that is heavily rigged towards 5");async function Z(e){let o=Math.random()<.8?5:Math.floor(Math.random()*6)+1;return e.reply(`You rolled a ${o}`)}var S={};i(S,{data:()=>ee,execute:()=>oe});var n=require("discord.js");var A=u(require("sqlite3")),G=u(require("fs")),v="./database.sqlite";G.default.openSync(v,"a");var E=new A.default.Database(v);function $(){return new Promise((e,o)=>{E.run(`CREATE TABLE IF NOT EXISTS random_messages (
      server_id TEXT PRIMARY KEY,
      messages TEXT,
      chance FLOAT
    )`,s=>{s?o(s):e()})})}async function M(e,o,s){return await $(),await new Promise((t,r)=>{let p=E.prepare("INSERT OR REPLACE INTO random_messages VALUES (?, ?, ?)");p.run(e,o,s,function(a){a?(console.error(a.message),r(a)):(console.log(`A row has been inserted or replaced with rowid ${this.lastID}`),t(`A row has been inserted or replaced with rowid ${this.lastID}`))}),p.finalize()})}async function B(e){return await $(),await new Promise((o,s)=>{E.get("SELECT messages, chance FROM random_messages WHERE server_id = ?",[e],function(t,r){if(t)console.error(t.message),s(t);else if(r){let p=r.messages.split(","),a=r.chance;o({messages:p,chance:a})}else o({messages:["L"],chance:.01})})})}var ee=new n.SlashCommandBuilder().setName("config").setDescription("Configuration commands").addSubcommand(e=>e.setName("random-messages").setDescription("Sets a list of random messages").addStringOption(o=>o.setName("messages").setDescription("A list of words separated by commas").setRequired(!0)).addNumberOption(o=>o.setName("chance").setDescription("The chance of sending a random message example: 0.01").setRequired(!1)));async function oe(e){try{if(!e.isChatInputCommand())return;if(!(e.member instanceof n.GuildMember)||!(e.channel instanceof n.GuildChannel)||!e.member.permissionsIn(e.channel).has(n.PermissionsBitField.Flags.Administrator)){await e.reply({content:"You are not permitted to use this command.",ephemeral:!0});return}if(e.options.getSubcommand()==="random-messages"){let o=e.options.getString("messages");if(!o)throw new Error("No messages provided");let s=o.split(",").map(r=>r.trim());if(s.some(r=>r===""))throw new Error('Wrong format. Messages should be separated by commas and should not be empty. Example: "Hello,World,How are you"');console.log(`Set random messages to: ${o}`);let t=e.options.getNumber("chance")||.01;await M(e.guildId,s.join(","),t),await e.reply(`Set random messages to: ${s.join(", ")}`)}}catch(o){console.log(o.message),await e.reply(`Error: ${o.message}`)}}var d={ping:h,github:w,kirb:y,dice:C,config:S};var g=require("discord.js");var se=Object.values(d).map(e=>e.data),te=new g.REST({version:"10"}).setToken(m.DISCORD_TOKEN);async function H({guildId:e}){try{console.log("Started refreshing application (/) commands."),await te.put(g.Routes.applicationGuildCommands(m.DISCORD_CLIENT_ID,e),{body:se}),console.log("Successfully reloaded application (/) commands.")}catch(o){console.error(o)}}var l=new L.Client({intents:["Guilds","GuildMessages","DirectMessages"]});l.once("ready",()=>{console.log("Discord bot is ready! \u{1F916}")});l.on("guildCreate",async e=>{await H({guildId:e.id})});l.on("interactionCreate",async e=>{if(!e.isCommand())return;let{commandName:o}=e;console.log(`Running command ${o}`),d[o]&&d[o].execute(e)});l.on("messageCreate",async e=>{if(e.author.bot)return;let{messages:o,chance:s}=await B(e.guild?.id)||{messages:["L"],chance:.01};if(Math.random()<s){let t=o[Math.floor(Math.random()*o.length)];await e.reply(t)}});l.login(m.DISCORD_TOKEN);
