"use strict";var _=Object.create;var l=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var m=(e,o)=>{for(var t in o)l(e,t,{get:o[t],enumerable:!0})},B=(e,o,t,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of v(o))!$.call(e,n)&&n!==t&&l(e,n,{get:()=>o[n],enumerable:!(r=T(o,n))||r.enumerable});return e};var C=(e,o,t)=>(t=e!=null?_(O(e)):{},B(o||!e||!e.__esModule?l(t,"default",{value:e,enumerable:!0}):t,e));var N=require("discord.js");var y=C(require("dotenv"));y.default.config();var{DISCORD_TOKEN:h,DISCORD_CLIENT_ID:w}=process.env;if(!h||!w)throw new Error("Missing environment variables");var s={DISCORD_TOKEN:h,DISCORD_CLIENT_ID:w};var p={};m(p,{data:()=>H,execute:()=>P});var D=require("discord.js"),H=new D.SlashCommandBuilder().setName("ping").setDescription("Replies with Pong!");async function P(e){return e.reply("Pong!")}var f={};m(f,{data:()=>k,execute:()=>A,getRepos:()=>I,getUserProfile:()=>x});var i=require("discord.js"),u=C(require("axios")),S=process.env.GITHUB_TOKEN,k=new i.SlashCommandBuilder().setName("github").setDescription("Get GitHub stats for a user").addSubcommand(e=>e.setName("profile").setDescription("Get GitHub profile for a user").addStringOption(o=>o.setName("username").setDescription("GitHub username").setRequired(!0))).addSubcommand(e=>e.setName("repos").setDescription("Get a list of repositories for a GitHub user").addStringOption(o=>o.setName("username").setDescription("GitHub username").setRequired(!0)));async function A(e){if(e.isChatInputCommand())try{let o=e.options.getString("username");if(!o)throw new Error("Username is required");if(e.options.getSubcommand()==="profile"){let t=await x(o);return await e.reply({embeds:[t]})}else if(e.options.getSubcommand()==="repos"){let t=await I(o);return await e.reply({embeds:[t]})}}catch(o){return console.log(o.message),e.reply(`Error: ${o.message}`)}}async function x(e){let o=await u.default.get(`https://api.github.com/users/${e}`,{headers:{Authorization:`token ${S}`}});return new i.EmbedBuilder().setTitle(`${e}'s GitHub Profile`).addFields({name:"Public Repositories",value:o.data.public_repos.toString(),inline:!0},{name:"Followers",value:o.data.followers.toString(),inline:!0},{name:"Following",value:o.data.following.toString(),inline:!0},{name:"Account Created At",value:`<t:${Math.floor(new Date(o.data.created_at).getTime()/1e3)}:D>`,inline:!0}).setColor("#0099ff")}async function I(e){let o=await u.default.get(`https://api.github.com/users/${e}/repos`,{headers:{Authorization:`token ${S}`}});return new i.EmbedBuilder().setTitle(`${e}'s GitHub Repositories`).setDescription(o.data.map(r=>`[${r.name}](${r.html_url})`).join(`
`)).setColor("#0099ff")}var g={};m(g,{data:()=>M,execute:()=>K});var R=require("discord.js"),M=new R.SlashCommandBuilder().setName("kirb").setDescription("Pings Kirb!");async function K(e){return e.reply("<@765061967961784321>")}var b={};m(b,{data:()=>U,execute:()=>q});var E=require("discord.js"),U=new E.SlashCommandBuilder().setName("dice").setDescription("Rolls a dice that is heavily rigged towards 5");async function q(e){let o=Math.random()<.8?5:Math.floor(Math.random()*6)+1;return e.reply(`You rolled a ${o}`)}var a={ping:p,github:f,kirb:g,dice:b};var c=require("discord.js");var F=Object.values(a).map(e=>e.data),j=new c.REST({version:"10"}).setToken(s.DISCORD_TOKEN);async function G({guildId:e}){try{console.log("Started refreshing application (/) commands."),await j.put(c.Routes.applicationGuildCommands(s.DISCORD_CLIENT_ID,e),{body:F}),console.log("Successfully reloaded application (/) commands.")}catch(o){console.error(o)}}var d=new N.Client({intents:["Guilds","GuildMessages","DirectMessages"]});d.once("ready",()=>{console.log("Discord bot is ready! \u{1F916}")});d.on("guildCreate",async e=>{await G({guildId:e.id})});d.on("interactionCreate",async e=>{if(!e.isCommand())return;let{commandName:o}=e;console.log(`Running command ${o}`),a[o]&&a[o].execute(e)});d.login(s.DISCORD_TOKEN);
